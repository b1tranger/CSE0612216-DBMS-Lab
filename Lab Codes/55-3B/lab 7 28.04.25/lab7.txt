----------------------------------------------
#Table Creation with Constraints
----------------------------------------------
create table Students(
    student_id int primary key,
    first_name varchar(50) not null,
    last_name varchar(50) not null,
    email varchar(100) unique,
    age int, check (age>16)
    
    );
----------------------------------------------
create table Courses(
    course_id int primary key,
    course_name varchar(100) not null,
    credits int, check (credits>0)
    
    );
----------------------------------------------
create table Enrollments(
    enrollment_id int primary key,
    student_id int,
    course_id int,
   enrollment_date date not null,
    foreign key (student_id) references students(student_id),
    foreign key (course_id) references courses(course_id)
    
    );
----------------------------------------------
#Inserting Data
----------------------------------------------
insert into students (student_id,first_name,last_name,email,age) VALUES
(1,"ALice","Johnson","alice.johnson@example.com",19),
(2,"Bob","Smith","bob.smith@example.com",22),
(3,"Charlie","Brown","charlie.brown@example.com",18);
----------------------------------------------
insert into courses (course_id,course_name,credits) VALUES
(101,"Database Systems",4),
(102,"Introduction to Programming",3);
----------------------------------------------
insert into enrollments (enrollment_id,student_id,course_id,enrollment_date) VALUES
(1,1,101,'2025-04-01'),
(2,1,102,'2025-04-02'),
(3,2,101,'2025-04-03'),
(4,3,102,'2025-04-04');
----------------------------------------------
#Querying the Database
----------------------------------------------
7. (gotta use concat function)
//select first_name,last_name,age FROM students;
select concat(first_name," ",last_name) as full_name,age FROM students;
8. select * from students where age<20;
9. select first_name,course_id from students
inner join enrollments on students.student_id=enrollments.student_id;

11. 
12. update students
set age=25
where student_id=1;
13. delete from enrollments where enrollment_id=2;
----------------------------------------------
#Advanced Query Practice
----------------------------------------------
10. 
14. select course_id 
from enrollments
group by course_id
having count(student_id)>1;

----------------------------------------------
#Classroom questions
----------------------------------------------
1.      
Find how many students have the same age

select age,count(age) as head_cnt
from students
group by age;

2.      
Find how many courses have the same number of
credits.

select credits,count(course_id) as course_cnt
from courses
group by credits;

3.      
Find the average age of students having the same
first name

select first_name,avg(age) as avg_age
from students
group by first_name;


----------------------------------------------
insert into students (student_id,first_name,last_name,email,age) VALUES
(4,"ALice1","Johnson1","alice1.johnson@example.com",19),
(5,"Bob1","Smith1","bob1.smith@example.com",18),
(6,"Charlie1","Brown1","charlie1.brown@example.com",18);
----------------------------------------------
insert into courses (course_id,course_name,credits) VALUES
(103,"Database Systems 2",4),
(104,"Introduction to Programming 2",3);
----------------------------------------------










